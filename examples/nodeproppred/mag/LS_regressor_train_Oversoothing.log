/home/hussein/anaconda3/envs/ogb/bin/python /media/hussein/UbuntuData/GithubRepos/ogb_cods/examples/nodeproppred/mag/pgy_rgcn_regressor.py
data= Data(
  num_nodes_dict={
    Object_hasIdentifier=5362963,
    Object_rdf-schema#label=270819,
    Object_schema#creatorNote=68,
    Object_schema#isbn=104,
    Object_schema#monthOfPublication=12,
    Object_schema#numberOfCreators=88,
    Object_schema#orderedCreators=1119791,
    Object_schema#otherAffiliation=2791,
    Object_schema#otherFullCreatorName=23348,
    Object_schema#pagination=102087,
    Object_schema#primaryAffiliation=6883,
    Object_schema#primaryFullCreatorName=268978,
    Object_schema#publicationNote=12,
    Object_schema#publishedBy=14,
    Object_schema#publishedInJournal=10,
    Object_schema#publishedInJournalVolume=403125,
    Object_schema#publishedInJournalVolumeIssue=46,
    Object_schema#publishedInSeries=2,
    Object_schema#publishedInSeriesVolume=160,
    Object_schema#title=132837,
    Object_schema#yearOfEvent=58,
    archive=13176,
    archivedWebpage=749,
    awardWebpage=466,
    db=3190,
    differentFrom=1036,
    djvu=1601,
    document=11,
    doi=614346,
    entity=159202,
    net=5,
    orcid=102836,
    otherElectronicEdition=92820,
    otherHomepage=92305,
    pid=2893304,
    primaryElectronicEdition=1103966,
    primaryHomepage=127920,
    rdf=13,
    rec=1123344,
    sameAs=1505146,
    webpage=70800,
    wiki=6877
  },
  edge_index_dict={
    (pid, 22-rdf-syntax-ns#type, rdf)=[2, 5786608],
    (pid, owl#differentFrom, differentFrom)=[2, 1086],
    (pid, rdf-schema#label, Object_rdf-schema#label)=[2, 2893304],
    (pid, schema#archivedWebpage, archivedWebpage)=[2, 749],
    (pid, schema#awardWebpage, awardWebpage)=[2, 469],
    (pid, schema#creatorNote, Object_schema#creatorNote)=[2, 1211],
    (pid, schema#orcid, orcid)=[2, 102836],
    (pid, schema#otherAffiliation, Object_schema#otherAffiliation)=[2, 30839],
    (pid, schema#otherFullCreatorName, Object_schema#otherFullCreatorName)=[2, 75825],
    (pid, schema#otherHomepage, otherHomepage)=[2, 92321],
    (pid, schema#primaryAffiliation, Object_schema#primaryAffiliation)=[2, 107347],
    (pid, schema#primaryFullCreatorName, Object_schema#primaryFullCreatorName)=[2, 2893304],
    (pid, schema#primaryHomepage, primaryHomepage)=[2, 127956],
    (pid, schema#webpage, webpage)=[2, 70801],
    (pid, schema#wikipedia, wiki)=[2, 6919],
    (rec, hasIdentifier, Object_hasIdentifier)=[2, 2243397],
    (rec, owl#sameAs, sameAs)=[2, 1336213],
    (rec, schema#archivedElectronicEdition, archive)=[2, 13178],
    (rec, schema#authoredBy, pid)=[2, 3887765],
    (rec, schema#bibtexType, net)=[2, 1123344],
    (rec, schema#doi, doi)=[2, 614346],
    (rec, schema#editedBy, pid)=[2, 243],
    (rec, schema#isbn, Object_schema#isbn)=[2, 107],
    (rec, schema#listedOnTocPage, db)=[2, 1123286],
    (rec, schema#monthOfPublication, Object_schema#monthOfPublication)=[2, 8954],
    (rec, schema#numberOfCreators, Object_schema#numberOfCreators)=[2, 1123344],
    (rec, schema#orderedCreators, Object_schema#orderedCreators)=[2, 1119791],
    (rec, schema#otherElectronicEdition, otherElectronicEdition)=[2, 92820],
    (rec, schema#pagination, Object_schema#pagination)=[2, 681347],
    (rec, schema#primaryElectronicEdition, primaryElectronicEdition)=[2, 1103969],
    (rec, schema#publicationNote, Object_schema#publicationNote)=[2, 205],
    (rec, schema#publishedAsPartOf, rec)=[2, 1868],
    (rec, schema#publishedBy, Object_schema#publishedBy)=[2, 219],
    (rec, schema#publishedInJournal, Object_schema#publishedInJournal)=[2, 527741],
    (rec, schema#publishedInJournalVolume, Object_schema#publishedInJournalVolume)=[2, 527741],
    (rec, schema#publishedInJournalVolumeIssue, Object_schema#publishedInJournalVolumeIssue)=[2, 99318],
    (rec, schema#publishedInSeries, Object_schema#publishedInSeries)=[2, 219],
    (rec, schema#publishedInSeriesVolume, Object_schema#publishedInSeriesVolume)=[2, 162],
    (rec, schema#title, Object_schema#title)=[2, 1120791],
    (rec, schema#wikidata, entity)=[2, 107414],
    (rec, schema#yearOfEvent, Object_schema#yearOfEvent)=[2, 594631],
    (rdf, inv_22-rdf-syntax-ns#type, pid)=[2, 5786608],
    (differentFrom, inv_owl#differentFrom, pid)=[2, 1086],
    (Object_rdf-schema#label, inv_rdf-schema#label, pid)=[2, 2893304],
    (archivedWebpage, inv_schema#archivedWebpage, pid)=[2, 749],
    (awardWebpage, inv_schema#awardWebpage, pid)=[2, 469],
    (Object_schema#creatorNote, inv_schema#creatorNote, pid)=[2, 1211],
    (orcid, inv_schema#orcid, pid)=[2, 102836],
    (Object_schema#otherAffiliation, inv_schema#otherAffiliation, pid)=[2, 30839],
    (Object_schema#otherFullCreatorName, inv_schema#otherFullCreatorName, pid)=[2, 75825],
    (otherHomepage, inv_schema#otherHomepage, pid)=[2, 92321],
    (Object_schema#primaryAffiliation, inv_schema#primaryAffiliation, pid)=[2, 107347],
    (Object_schema#primaryFullCreatorName, inv_schema#primaryFullCreatorName, pid)=[2, 2893304],
    (primaryHomepage, inv_schema#primaryHomepage, pid)=[2, 127956],
    (webpage, inv_schema#webpage, pid)=[2, 70801],
    (wiki, inv_schema#wikipedia, pid)=[2, 6919],
    (Object_hasIdentifier, inv_hasIdentifier, rec)=[2, 2243397],
    (sameAs, inv_owl#sameAs, rec)=[2, 1336213],
    (archive, inv_schema#archivedElectronicEdition, rec)=[2, 13178],
    (pid, inv_schema#authoredBy, rec)=[2, 3887765],
    (net, inv_schema#bibtexType, rec)=[2, 1123344],
    (doi, inv_schema#doi, rec)=[2, 614346],
    (pid, inv_schema#editedBy, rec)=[2, 243],
    (Object_schema#isbn, inv_schema#isbn, rec)=[2, 107],
    (db, inv_schema#listedOnTocPage, rec)=[2, 1123286],
    (Object_schema#monthOfPublication, inv_schema#monthOfPublication, rec)=[2, 8954],
    (Object_schema#numberOfCreators, inv_schema#numberOfCreators, rec)=[2, 1123344],
    (Object_schema#orderedCreators, inv_schema#orderedCreators, rec)=[2, 1119791],
    (otherElectronicEdition, inv_schema#otherElectronicEdition, rec)=[2, 92820],
    (Object_schema#pagination, inv_schema#pagination, rec)=[2, 681347],
    (primaryElectronicEdition, inv_schema#primaryElectronicEdition, rec)=[2, 1103969],
    (Object_schema#publicationNote, inv_schema#publicationNote, rec)=[2, 205],
    (rec, inv_schema#publishedAsPartOf, rec)=[2, 1868],
    (Object_schema#publishedBy, inv_schema#publishedBy, rec)=[2, 219],
    (Object_schema#publishedInJournal, inv_schema#publishedInJournal, rec)=[2, 527741],
    (Object_schema#publishedInJournalVolume, inv_schema#publishedInJournalVolume, rec)=[2, 527741],
    (Object_schema#publishedInJournalVolumeIssue, inv_schema#publishedInJournalVolumeIssue, rec)=[2, 99318],
    (Object_schema#publishedInSeries, inv_schema#publishedInSeries, rec)=[2, 219],
    (Object_schema#publishedInSeriesVolume, inv_schema#publishedInSeriesVolume, rec)=[2, 162],
    (Object_schema#title, inv_schema#title, rec)=[2, 1120791],
    (entity, inv_schema#wikidata, rec)=[2, 107414],
    (Object_schema#yearOfEvent, inv_schema#yearOfEvent, rec)=[2, 594631]
  },
  node_year={},
  edge_reltype={
    (pid, 22-rdf-syntax-ns#type, rdf)=[5786608, 1],
    (pid, owl#differentFrom, differentFrom)=[1086, 1],
    (pid, rdf-schema#label, Object_rdf-schema#label)=[2893304, 1],
    (pid, schema#archivedWebpage, archivedWebpage)=[749, 1],
    (pid, schema#awardWebpage, awardWebpage)=[469, 1],
    (pid, schema#creatorNote, Object_schema#creatorNote)=[1211, 1],
    (pid, schema#orcid, orcid)=[102836, 1],
    (pid, schema#otherAffiliation, Object_schema#otherAffiliation)=[30839, 1],
    (pid, schema#otherFullCreatorName, Object_schema#otherFullCreatorName)=[75825, 1],
    (pid, schema#otherHomepage, otherHomepage)=[92321, 1],
    (pid, schema#primaryAffiliation, Object_schema#primaryAffiliation)=[107347, 1],
    (pid, schema#primaryFullCreatorName, Object_schema#primaryFullCreatorName)=[2893304, 1],
    (pid, schema#primaryHomepage, primaryHomepage)=[127956, 1],
    (pid, schema#webpage, webpage)=[70801, 1],
    (pid, schema#wikipedia, wiki)=[6919, 1],
    (rec, hasIdentifier, Object_hasIdentifier)=[2243397, 1],
    (rec, owl#sameAs, sameAs)=[1336213, 1],
    (rec, schema#archivedElectronicEdition, archive)=[13178, 1],
    (rec, schema#authoredBy, pid)=[3887765, 1],
    (rec, schema#bibtexType, net)=[1123344, 1],
    (rec, schema#doi, doi)=[614346, 1],
    (rec, schema#editedBy, pid)=[243, 1],
    (rec, schema#isbn, Object_schema#isbn)=[107, 1],
    (rec, schema#listedOnTocPage, db)=[1123286, 1],
    (rec, schema#monthOfPublication, Object_schema#monthOfPublication)=[8954, 1],
    (rec, schema#numberOfCreators, Object_schema#numberOfCreators)=[1123344, 1],
    (rec, schema#orderedCreators, Object_schema#orderedCreators)=[1119791, 1],
    (rec, schema#otherElectronicEdition, otherElectronicEdition)=[92820, 1],
    (rec, schema#pagination, Object_schema#pagination)=[681347, 1],
    (rec, schema#primaryElectronicEdition, primaryElectronicEdition)=[1103969, 1],
    (rec, schema#publicationNote, Object_schema#publicationNote)=[205, 1],
    (rec, schema#publishedAsPartOf, rec)=[1868, 1],
    (rec, schema#publishedBy, Object_schema#publishedBy)=[219, 1],
    (rec, schema#publishedInJournal, Object_schema#publishedInJournal)=[527741, 1],
    (rec, schema#publishedInJournalVolume, Object_schema#publishedInJournalVolume)=[527741, 1],
    (rec, schema#publishedInJournalVolumeIssue, Object_schema#publishedInJournalVolumeIssue)=[99318, 1],
    (rec, schema#publishedInSeries, Object_schema#publishedInSeries)=[219, 1],
    (rec, schema#publishedInSeriesVolume, Object_schema#publishedInSeriesVolume)=[162, 1],
    (rec, schema#title, Object_schema#title)=[1120791, 1],
    (rec, schema#wikidata, entity)=[107414, 1],
    (rec, schema#yearOfEvent, Object_schema#yearOfEvent)=[594631, 1]
  },
  y_dict={ rec=[1123344, 1] }
)
Data(edge_index=[2, 59287976], edge_attr=[59287976], node_type=[15607309], local_node_idx=[15607309], num_nodes=15607309, y=[15607309, 1], train_mask=[15607309])
dataset.processed_dir /media/hussein/UbuntuData/OGBN_Datasets/KGTOSA_DBLP/DBLP_Paper_Venue_FM_Literals2Nodes_SY1900_EY2021_50Class/processed
Sampling time= 0:00:06.232057  sec.
data= Data(
  num_nodes_dict={
    Children=63863,
    CreativeWork=128209,
    Event=234662,
    Organization=301403,
    Person=1692833,
    Place=1252138,
    about=621,
    actor=48973,
    affiliation=474,
    alternateName=4562636,
    alumniOf=21285,
    author=219,
    award=7810,
    birthDate=107228,
    birthPlace=103228,
    brand=31,
    broadcastChannelId=23,
    byArtist=3920,
    callSign=43,
    character=370,
    citation=1,
    competitor=7106,
    composer=658,
    containedInPlace=94453,
    containsPlace=108429,
    contentLocation=775,
    contributor=52,
    copyrightHolder=12,
    countryOfOrigin=152,
    creator=416,
    dateCreated=100,
    datePublished=14368,
    deathDate=104673,
    deathPlace=46450,
    director=11309,
    dissolutionDate=5155,
    duns=36,
    duration=296,
    editor=7,
    elevation=3986,
    endDate=12023,
    exampleOfWork=1,
    familyName=38002,
    faxNumber=880,
    founder=15192,
    foundingDate=20348,
    foundingLocation=3909,
    gender=7,
    geo=934802,
    givenName=8180,
    hasOccupation=1429,
    hasPart=1233,
    height=126,
    homeLocation=11736,
    honorificPrefix=48,
    iataCode=8424,
    icaoCode=12234,
    image=1075387,
    inLanguage=56,
    isBasedOn=238,
    isPartOf=7074,
    isbn=3,
    iswcCode=119,
    knowsLanguage=598,
    leiCode=3512,
    license=1,
    location=48113,
    locationCreated=4,
    logo=32404,
    lyricist=565,
    material=5,
    memberOf=37509,
    musicBy=4966,
    nationality=1044,
    netWorth=16,
    numberOfEmployees=231,
    numberOfEpisodes=163,
    numberOfPages=4,
    numberOfSeasons=20,
    organizer=49,
    owns=72,
    parent=51300,
    parentOrganization=5371,
    partOfSeries=1,
    producer=10393,
    productionCompany=1597,
    provider=3,
    publisher=844,
    sameAs=18920164,
    servesCuisine=43,
    sponsor=749,
    sport=219,
    spouse=52724,
    startDate=14342,
    subEvent=18658,
    subOrganization=9198,
    superEvent=10207,
    telephone=7503,
    translator=7,
    url=468773,
    weight=20,
    width=3,
    workExample=1,
    worksFor=632
  },
  edge_index_dict={
    (CreativeWork, about, about)=[2, 1423],
    (CreativeWork, actor, actor)=[2, 240559],
    (CreativeWork, author, author)=[2, 251],
    (CreativeWork, byArtist, byArtist)=[2, 11205],
    (CreativeWork, character, character)=[2, 393],
    (CreativeWork, citation, citation)=[2, 1],
    (CreativeWork, composer, composer)=[2, 1275],
    (CreativeWork, contentLocation, contentLocation)=[2, 16863],
    (CreativeWork, contributor, contributor)=[2, 88],
    (CreativeWork, copyrightHolder, copyrightHolder)=[2, 14],
    (CreativeWork, countryOfOrigin, countryOfOrigin)=[2, 21983],
    (CreativeWork, creator, creator)=[2, 481],
    (CreativeWork, dateCreated, dateCreated)=[2, 239],
    (CreativeWork, datePublished, datePublished)=[2, 117243],
    (CreativeWork, director, director)=[2, 36985],
    (CreativeWork, duration, duration)=[2, 19560],
    (CreativeWork, editor, editor)=[2, 7],
    (CreativeWork, exampleOfWork, exampleOfWork)=[2, 1],
    (CreativeWork, hasPart, hasPart)=[2, 1259],
    (CreativeWork, inLanguage, inLanguage)=[2, 13198],
    (CreativeWork, isBasedOn, isBasedOn)=[2, 276],
    (CreativeWork, isPartOf, isPartOf)=[2, 13991],
    (CreativeWork, isbn, isbn)=[2, 3],
    (CreativeWork, iswcCode, iswcCode)=[2, 119],
    (CreativeWork, license, license)=[2, 1],
    (CreativeWork, locationCreated, locationCreated)=[2, 13],
    (CreativeWork, lyricist, lyricist)=[2, 1125],
    (CreativeWork, musicBy, musicBy)=[2, 25562],
    (CreativeWork, numberOfEpisodes, numberOfEpisodes)=[2, 948],
    (CreativeWork, numberOfPages, numberOfPages)=[2, 4],
    (CreativeWork, numberOfSeasons, numberOfSeasons)=[2, 676],
    (CreativeWork, partOfSeries, partOfSeries)=[2, 1],
    (CreativeWork, producer, producer)=[2, 43485],
    (CreativeWork, productionCompany, productionCompany)=[2, 13473],
    (CreativeWork, provider, provider)=[2, 3],
    (CreativeWork, publisher, publisher)=[2, 8108],
    (CreativeWork, translator, translator)=[2, 8],
    (CreativeWork, workExample, workExample)=[2, 1],
    (Event, competitor, competitor)=[2, 33329],
    (Event, endDate, endDate)=[2, 25661],
    (Event, location, location)=[2, 36614],
    (Event, organizer, organizer)=[2, 59],
    (Event, sport, sport)=[2, 48572],
    (Event, startDate, startDate)=[2, 26907],
    (Event, subEvent, subEvent)=[2, 19065],
    (Event, superEvent, superEvent)=[2, 43353],
    (Event, url, url)=[2, 15755],
    (Organization, brand, brand)=[2, 32],
    (Organization, dissolutionDate, dissolutionDate)=[2, 20679],
    (Organization, duns, duns)=[2, 31],
    (Organization, founder, founder)=[2, 14674],
    (Organization, foundingDate, foundingDate)=[2, 203705],
    (Organization, foundingLocation, foundingLocation)=[2, 17435],
    (Organization, iataCode, iataCode)=[2, 2454],
    (Organization, icaoCode, icaoCode)=[2, 2998],
    (Organization, leiCode, leiCode)=[2, 1883],
    (Organization, logo, logo)=[2, 23356],
    (Organization, parentOrganization, parentOrganization)=[2, 8145],
    (Organization, sponsor, sponsor)=[2, 650],
    (Organization, subOrganization, subOrganization)=[2, 6933],
    (Person, Children, Children)=[2, 80132],
    (Person, affiliation, affiliation)=[2, 1029],
    (Person, alumniOf, alumniOf)=[2, 567601],
    (Person, birthDate, birthDate)=[2, 1449086],
    (Person, birthPlace, birthPlace)=[2, 1083682],
    (Person, callSign, callSign)=[2, 4],
    (Person, deathDate, deathDate)=[2, 635931],
    (Person, deathPlace, deathPlace)=[2, 371947],
    (Person, familyName, familyName)=[2, 564430],
    (Person, gender, gender)=[2, 825],
    (Person, givenName, givenName)=[2, 1029874],
    (Person, hasOccupation, hasOccupation)=[2, 1055132],
    (Person, height, height)=[2, 394],
    (Person, homeLocation, homeLocation)=[2, 46465],
    (Person, honorificPrefix, honorificPrefix)=[2, 2614],
    (Person, knowsLanguage, knowsLanguage)=[2, 325443],
    (Person, memberOf, memberOf)=[2, 1308598],
    (Person, nationality, nationality)=[2, 998830],
    (Person, netWorth, netWorth)=[2, 19],
    (Person, owns, owns)=[2, 86],
    (Person, parent, parent)=[2, 80516],
    (Person, spouse, spouse)=[2, 57906],
    (Person, weight, weight)=[2, 17],
    (Person, worksFor, worksFor)=[2, 704],
    (Place, alternateName, alternateName)=[2, 1712440],
    (Place, award, award)=[2, 3362],
    (Place, broadcastChannelId, broadcastChannelId)=[2, 20],
    (Place, containedInPlace, containedInPlace)=[2, 1091980],
    (Place, containsPlace, containsPlace)=[2, 121563],
    (Place, elevation, elevation)=[2, 66700],
    (Place, faxNumber, faxNumber)=[2, 704],
    (Place, geo, geo)=[2, 957678],
    (Place, image, image)=[2, 519251],
    (Place, material, material)=[2, 128],
    (Place, numberOfEmployees, numberOfEmployees)=[2, 590],
    (Place, sameAs, sameAs)=[2, 9316948],
    (Place, servesCuisine, servesCuisine)=[2, 326],
    (Place, telephone, telephone)=[2, 6232],
    (Place, width, width)=[2, 3],
    (about, inv_about, CreativeWork)=[2, 1423],
    (actor, inv_actor, CreativeWork)=[2, 240559],
    (author, inv_author, CreativeWork)=[2, 251],
    (byArtist, inv_byArtist, CreativeWork)=[2, 11205],
    (character, inv_character, CreativeWork)=[2, 393],
    (citation, inv_citation, CreativeWork)=[2, 1],
    (composer, inv_composer, CreativeWork)=[2, 1275],
    (contentLocation, inv_contentLocation, CreativeWork)=[2, 16863],
    (contributor, inv_contributor, CreativeWork)=[2, 88],
    (copyrightHolder, inv_copyrightHolder, CreativeWork)=[2, 14],
    (countryOfOrigin, inv_countryOfOrigin, CreativeWork)=[2, 21983],
    (creator, inv_creator, CreativeWork)=[2, 481],
    (dateCreated, inv_dateCreated, CreativeWork)=[2, 239],
    (datePublished, inv_datePublished, CreativeWork)=[2, 117243],
    (director, inv_director, CreativeWork)=[2, 36985],
    (duration, inv_duration, CreativeWork)=[2, 19560],
    (editor, inv_editor, CreativeWork)=[2, 7],
    (exampleOfWork, inv_exampleOfWork, CreativeWork)=[2, 1],
    (hasPart, inv_hasPart, CreativeWork)=[2, 1259],
    (inLanguage, inv_inLanguage, CreativeWork)=[2, 13198],
    (isBasedOn, inv_isBasedOn, CreativeWork)=[2, 276],
    (isPartOf, inv_isPartOf, CreativeWork)=[2, 13991],
    (isbn, inv_isbn, CreativeWork)=[2, 3],
    (iswcCode, inv_iswcCode, CreativeWork)=[2, 119],
    (license, inv_license, CreativeWork)=[2, 1],
    (locationCreated, inv_locationCreated, CreativeWork)=[2, 13],
    (lyricist, inv_lyricist, CreativeWork)=[2, 1125],
    (musicBy, inv_musicBy, CreativeWork)=[2, 25562],
    (numberOfEpisodes, inv_numberOfEpisodes, CreativeWork)=[2, 948],
    (numberOfPages, inv_numberOfPages, CreativeWork)=[2, 4],
    (numberOfSeasons, inv_numberOfSeasons, CreativeWork)=[2, 676],
    (partOfSeries, inv_partOfSeries, CreativeWork)=[2, 1],
    (producer, inv_producer, CreativeWork)=[2, 43485],
    (productionCompany, inv_productionCompany, CreativeWork)=[2, 13473],
    (provider, inv_provider, CreativeWork)=[2, 3],
    (publisher, inv_publisher, CreativeWork)=[2, 8108],
    (translator, inv_translator, CreativeWork)=[2, 8],
    (workExample, inv_workExample, CreativeWork)=[2, 1],
    (competitor, inv_competitor, Event)=[2, 33329],
    (endDate, inv_endDate, Event)=[2, 25661],
    (location, inv_location, Event)=[2, 36614],
    (organizer, inv_organizer, Event)=[2, 59],
    (sport, inv_sport, Event)=[2, 48572],
    (startDate, inv_startDate, Event)=[2, 26907],
    (subEvent, inv_subEvent, Event)=[2, 19065],
    (superEvent, inv_superEvent, Event)=[2, 43353],
    (url, inv_url, Event)=[2, 15755],
    (brand, inv_brand, Organization)=[2, 32],
    (dissolutionDate, inv_dissolutionDate, Organization)=[2, 20679],
    (duns, inv_duns, Organization)=[2, 31],
    (founder, inv_founder, Organization)=[2, 14674],
    (foundingDate, inv_foundingDate, Organization)=[2, 203705],
    (foundingLocation, inv_foundingLocation, Organization)=[2, 17435],
    (iataCode, inv_iataCode, Organization)=[2, 2454],
    (icaoCode, inv_icaoCode, Organization)=[2, 2998],
    (leiCode, inv_leiCode, Organization)=[2, 1883],
    (logo, inv_logo, Organization)=[2, 23356],
    (parentOrganization, inv_parentOrganization, Organization)=[2, 8145],
    (sponsor, inv_sponsor, Organization)=[2, 650],
    (subOrganization, inv_subOrganization, Organization)=[2, 6933],
    (Children, inv_Children, Person)=[2, 80132],
    (affiliation, inv_affiliation, Person)=[2, 1029],
    (alumniOf, inv_alumniOf, Person)=[2, 567601],
    (birthDate, inv_birthDate, Person)=[2, 1449086],
    (birthPlace, inv_birthPlace, Person)=[2, 1083682],
    (callSign, inv_callSign, Person)=[2, 4],
    (deathDate, inv_deathDate, Person)=[2, 635931],
    (deathPlace, inv_deathPlace, Person)=[2, 371947],
    (familyName, inv_familyName, Person)=[2, 564430],
    (gender, inv_gender, Person)=[2, 825],
    (givenName, inv_givenName, Person)=[2, 1029874],
    (hasOccupation, inv_hasOccupation, Person)=[2, 1055132],
    (height, inv_height, Person)=[2, 394],
    (homeLocation, inv_homeLocation, Person)=[2, 46465],
    (honorificPrefix, inv_honorificPrefix, Person)=[2, 2614],
    (knowsLanguage, inv_knowsLanguage, Person)=[2, 325443],
    (memberOf, inv_memberOf, Person)=[2, 1308598],
    (nationality, inv_nationality, Person)=[2, 998830],
    (netWorth, inv_netWorth, Person)=[2, 19],
    (owns, inv_owns, Person)=[2, 86],
    (parent, inv_parent, Person)=[2, 80516],
    (spouse, inv_spouse, Person)=[2, 57906],
    (weight, inv_weight, Person)=[2, 17],
    (worksFor, inv_worksFor, Person)=[2, 704],
    (alternateName, inv_alternateName, Place)=[2, 1712440],
    (award, inv_award, Place)=[2, 3362],
    (broadcastChannelId, inv_broadcastChannelId, Place)=[2, 20],
    (containedInPlace, inv_containedInPlace, Place)=[2, 1091980],
    (containsPlace, inv_containsPlace, Place)=[2, 121563],
    (elevation, inv_elevation, Place)=[2, 66700],
    (faxNumber, inv_faxNumber, Place)=[2, 704],
    (geo, inv_geo, Place)=[2, 957678],
    (image, inv_image, Place)=[2, 519251],
    (material, inv_material, Place)=[2, 128],
    (numberOfEmployees, inv_numberOfEmployees, Place)=[2, 590],
    (sameAs, inv_sameAs, Place)=[2, 9316948],
    (servesCuisine, inv_servesCuisine, Place)=[2, 326],
    (telephone, inv_telephone, Place)=[2, 6232],
    (width, inv_width, Place)=[2, 3]
  },
  node_year={},
  edge_reltype={
    (CreativeWork, about, about)=[1423, 1],
    (CreativeWork, actor, actor)=[240559, 1],
    (CreativeWork, author, author)=[251, 1],
    (CreativeWork, byArtist, byArtist)=[11205, 1],
    (CreativeWork, character, character)=[393, 1],
    (CreativeWork, citation, citation)=[1, 1],
    (CreativeWork, composer, composer)=[1275, 1],
    (CreativeWork, contentLocation, contentLocation)=[16863, 1],
    (CreativeWork, contributor, contributor)=[88, 1],
    (CreativeWork, copyrightHolder, copyrightHolder)=[14, 1],
    (CreativeWork, countryOfOrigin, countryOfOrigin)=[21983, 1],
    (CreativeWork, creator, creator)=[481, 1],
    (CreativeWork, dateCreated, dateCreated)=[239, 1],
    (CreativeWork, datePublished, datePublished)=[117243, 1],
    (CreativeWork, director, director)=[36985, 1],
    (CreativeWork, duration, duration)=[19560, 1],
    (CreativeWork, editor, editor)=[7, 1],
    (CreativeWork, exampleOfWork, exampleOfWork)=[1, 1],
    (CreativeWork, hasPart, hasPart)=[1259, 1],
    (CreativeWork, inLanguage, inLanguage)=[13198, 1],
    (CreativeWork, isBasedOn, isBasedOn)=[276, 1],
    (CreativeWork, isPartOf, isPartOf)=[13991, 1],
    (CreativeWork, isbn, isbn)=[3, 1],
    (CreativeWork, iswcCode, iswcCode)=[119, 1],
    (CreativeWork, license, license)=[1, 1],
    (CreativeWork, locationCreated, locationCreated)=[13, 1],
    (CreativeWork, lyricist, lyricist)=[1125, 1],
    (CreativeWork, musicBy, musicBy)=[25562, 1],
    (CreativeWork, numberOfEpisodes, numberOfEpisodes)=[948, 1],
    (CreativeWork, numberOfPages, numberOfPages)=[4, 1],
    (CreativeWork, numberOfSeasons, numberOfSeasons)=[676, 1],
    (CreativeWork, partOfSeries, partOfSeries)=[1, 1],
    (CreativeWork, producer, producer)=[43485, 1],
    (CreativeWork, productionCompany, productionCompany)=[13473, 1],
    (CreativeWork, provider, provider)=[3, 1],
    (CreativeWork, publisher, publisher)=[8108, 1],
    (CreativeWork, translator, translator)=[8, 1],
    (CreativeWork, workExample, workExample)=[1, 1],
    (Event, competitor, competitor)=[33329, 1],
    (Event, endDate, endDate)=[25661, 1],
    (Event, location, location)=[36614, 1],
    (Event, organizer, organizer)=[59, 1],
    (Event, sport, sport)=[48572, 1],
    (Event, startDate, startDate)=[26907, 1],
    (Event, subEvent, subEvent)=[19065, 1],
    (Event, superEvent, superEvent)=[43353, 1],
    (Event, url, url)=[15755, 1],
    (Organization, brand, brand)=[32, 1],
    (Organization, dissolutionDate, dissolutionDate)=[20679, 1],
    (Organization, duns, duns)=[31, 1],
    (Organization, founder, founder)=[14674, 1],
    (Organization, foundingDate, foundingDate)=[203705, 1],
    (Organization, foundingLocation, foundingLocation)=[17435, 1],
    (Organization, iataCode, iataCode)=[2454, 1],
    (Organization, icaoCode, icaoCode)=[2998, 1],
    (Organization, leiCode, leiCode)=[1883, 1],
    (Organization, logo, logo)=[23356, 1],
    (Organization, parentOrganization, parentOrganization)=[8145, 1],
    (Organization, sponsor, sponsor)=[650, 1],
    (Organization, subOrganization, subOrganization)=[6933, 1],
    (Person, Children, Children)=[80132, 1],
    (Person, affiliation, affiliation)=[1029, 1],
    (Person, alumniOf, alumniOf)=[567601, 1],
    (Person, birthDate, birthDate)=[1449086, 1],
    (Person, birthPlace, birthPlace)=[1083682, 1],
    (Person, callSign, callSign)=[4, 1],
    (Person, deathDate, deathDate)=[635931, 1],
    (Person, deathPlace, deathPlace)=[371947, 1],
    (Person, familyName, familyName)=[564430, 1],
    (Person, gender, gender)=[825, 1],
    (Person, givenName, givenName)=[1029874, 1],
    (Person, hasOccupation, hasOccupation)=[1055132, 1],
    (Person, height, height)=[394, 1],
    (Person, homeLocation, homeLocation)=[46465, 1],
    (Person, honorificPrefix, honorificPrefix)=[2614, 1],
    (Person, knowsLanguage, knowsLanguage)=[325443, 1],
    (Person, memberOf, memberOf)=[1308598, 1],
    (Person, nationality, nationality)=[998830, 1],
    (Person, netWorth, netWorth)=[19, 1],
    (Person, owns, owns)=[86, 1],
    (Person, parent, parent)=[80516, 1],
    (Person, spouse, spouse)=[57906, 1],
    (Person, weight, weight)=[17, 1],
    (Person, worksFor, worksFor)=[704, 1],
    (Place, alternateName, alternateName)=[1712440, 1],
    (Place, award, award)=[3362, 1],
    (Place, broadcastChannelId, broadcastChannelId)=[20, 1],
    (Place, containedInPlace, containedInPlace)=[1091980, 1],
    (Place, containsPlace, containsPlace)=[121563, 1],
    (Place, elevation, elevation)=[66700, 1],
    (Place, faxNumber, faxNumber)=[704, 1],
    (Place, geo, geo)=[957678, 1],
    (Place, image, image)=[519251, 1],
    (Place, material, material)=[128, 1],
    (Place, numberOfEmployees, numberOfEmployees)=[590, 1],
    (Place, sameAs, sameAs)=[9316948, 1],
    (Place, servesCuisine, servesCuisine)=[326, 1],
    (Place, telephone, telephone)=[6232, 1],
    (Place, width, width)=[3, 1]
  },
  y_dict={ CreativeWork=[128209, 1] }
)
Data(edge_index=[2, 49204610], edge_attr=[49204610], node_type=[30781882], local_node_idx=[30781882], num_nodes=30781882, y=[30781882, 1], train_mask=[30781882])
dataset.processed_dir /media/hussein/UbuntuData/OGBN_Datasets/KGTOSA_YAGO/YAGO_FM51/processed
Sampling time= 0:00:04.441091  sec.
data= Data(
  num_nodes_dict={
    author=1134649,
    field_of_study=59965,
    institution=8740,
    paper=736389
  },
  edge_index_dict={
    (author, affiliated_with, institution)=[2, 1043998],
    (author, writes, paper)=[2, 7145660],
    (paper, cites, paper)=[2, 5416271],
    (paper, has_topic, field_of_study)=[2, 7505078],
    (institution, inv_affiliated_with, author)=[2, 1043998],
    (paper, inv_writes, author)=[2, 7145660],
    (paper, inv_cites, paper)=[2, 5416271],
    (field_of_study, inv_has_topic, paper)=[2, 7505078]
  },
  x_dict={ paper=[736389, 128] },
  node_year={ paper=[736389, 1] },
  edge_reltype={
    (author, affiliated_with, institution)=[1043998, 1],
    (author, writes, paper)=[7145660, 1],
    (paper, cites, paper)=[5416271, 1],
    (paper, has_topic, field_of_study)=[7505078, 1]
  },
  y_dict={ paper=[736389, 1] }
)
Data(edge_index=[2, 42222014], edge_attr=[42222014], node_type=[1939743], local_node_idx=[1939743], num_nodes=1939743, y=[1939743, 1], train_mask=[1939743])
dataset.processed_dir /media/hussein/UbuntuData/OGBN_Datasets/KGTOSA_MAG/mag/processed
Sampling time= 0:00:05.066363  sec.
14043172
loaderds= DBLP_Paper_Venue_FM_Literals2Nodes_SY1900_EY2021_50Class
data= Data(num_nodes=44728, edge_index=[2, 198768], edge_attr=[198768], node_type=[44728], local_node_idx=[44728], y=[44728, 1], train_mask=[44728])
/media/hussein/UbuntuData/GithubRepos/ogb_cods/examples/nodeproppred/mag/GenerateSubgraphNodesScores.py:266: SettingWithCopyWarning:
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  all_labels_df["NScore"]=all_labels_df["NScore"].apply(lambda x: int(math.ceil(x)))
/media/hussein/UbuntuData/GithubRepos/ogb_cods/examples/nodeproppred/mag/GenerateSubgraphNodesScores.py:267: SettingWithCopyWarning:
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  all_labels_df["NodeID"]=all_labels_df["NodeID"].apply(lambda x:"https://sampledG/NID/"+str(x)+"")
/media/hussein/UbuntuData/GithubRepos/ogb_cods/examples/nodeproppred/mag/GenerateSubgraphNodesScores.py:280: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  nt_df=nt_df.append(is_target_df)
sample_idx= 1
data= Data(num_nodes=44751, edge_index=[2, 198614], edge_attr=[198614], node_type=[44751], local_node_idx=[44751], y=[44751, 1], train_mask=[44751])
/media/hussein/UbuntuData/GithubRepos/ogb_cods/examples/nodeproppred/mag/GenerateSubgraphNodesScores.py:266: SettingWithCopyWarning:
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  all_labels_df["NScore"]=all_labels_df["NScore"].apply(lambda x: int(math.ceil(x)))
/media/hussein/UbuntuData/GithubRepos/ogb_cods/examples/nodeproppred/mag/GenerateSubgraphNodesScores.py:267: SettingWithCopyWarning:
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  all_labels_df["NodeID"]=all_labels_df["NodeID"].apply(lambda x:"https://sampledG/NID/"+str(x)+"")
/media/hussein/UbuntuData/GithubRepos/ogb_cods/examples/nodeproppred/mag/GenerateSubgraphNodesScores.py:280: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  nt_df=nt_df.append(is_target_df)
sample_idx= 2
data= Data(num_nodes=45035, edge_index=[2, 201660], edge_attr=[201660], node_type=[45035], local_node_idx=[45035], y=[45035, 1], train_mask=[45035])
/media/hussein/UbuntuData/GithubRepos/ogb_cods/examples/nodeproppred/mag/GenerateSubgraphNodesScores.py:266: SettingWithCopyWarning:
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  all_labels_df["NScore"]=all_labels_df["NScore"].apply(lambda x: int(math.ceil(x)))
/media/hussein/UbuntuData/GithubRepos/ogb_cods/examples/nodeproppred/mag/GenerateSubgraphNodesScores.py:267: SettingWithCopyWarning:
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  all_labels_df["NodeID"]=all_labels_df["NodeID"].apply(lambda x:"https://sampledG/NID/"+str(x)+"")
/media/hussein/UbuntuData/GithubRepos/ogb_cods/examples/nodeproppred/mag/GenerateSubgraphNodesScores.py:280: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  nt_df=nt_df.append(is_target_df)
sample_idx= 3
data= Data(num_nodes=44849, edge_index=[2, 198946], edge_attr=[198946], node_type=[44849], local_node_idx=[44849], y=[44849, 1], train_mask=[44849])
/media/hussein/UbuntuData/GithubRepos/ogb_cods/examples/nodeproppred/mag/GenerateSubgraphNodesScores.py:266: SettingWithCopyWarning:
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  all_labels_df["NScore"]=all_labels_df["NScore"].apply(lambda x: int(math.ceil(x)))
/media/hussein/UbuntuData/GithubRepos/ogb_cods/examples/nodeproppred/mag/GenerateSubgraphNodesScores.py:267: SettingWithCopyWarning:
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  all_labels_df["NodeID"]=all_labels_df["NodeID"].apply(lambda x:"https://sampledG/NID/"+str(x)+"")
/media/hussein/UbuntuData/GithubRepos/ogb_cods/examples/nodeproppred/mag/GenerateSubgraphNodesScores.py:280: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  nt_df=nt_df.append(is_target_df)
sample_idx= 4
data= Data(num_nodes=44790, edge_index=[2, 199730], edge_attr=[199730], node_type=[44790], local_node_idx=[44790], y=[44790, 1], train_mask=[44790])
/media/hussein/UbuntuData/GithubRepos/ogb_cods/examples/nodeproppred/mag/GenerateSubgraphNodesScores.py:266: SettingWithCopyWarning:
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  all_labels_df["NScore"]=all_labels_df["NScore"].apply(lambda x: int(math.ceil(x)))
/media/hussein/UbuntuData/GithubRepos/ogb_cods/examples/nodeproppred/mag/GenerateSubgraphNodesScores.py:267: SettingWithCopyWarning:
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  all_labels_df["NodeID"]=all_labels_df["NodeID"].apply(lambda x:"https://sampledG/NID/"+str(x)+"")
/media/hussein/UbuntuData/GithubRepos/ogb_cods/examples/nodeproppred/mag/GenerateSubgraphNodesScores.py:280: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  nt_df=nt_df.append(is_target_df)
sample_idx= 5
data= Data(num_nodes=44984, edge_index=[2, 200544], edge_attr=[200544], node_type=[44984], local_node_idx=[44984], y=[44984, 1], train_mask=[44984])
/media/hussein/UbuntuData/GithubRepos/ogb_cods/examples/nodeproppred/mag/GenerateSubgraphNodesScores.py:266: SettingWithCopyWarning:
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  all_labels_df["NScore"]=all_labels_df["NScore"].apply(lambda x: int(math.ceil(x)))
/media/hussein/UbuntuData/GithubRepos/ogb_cods/examples/nodeproppred/mag/GenerateSubgraphNodesScores.py:267: SettingWithCopyWarning:
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  all_labels_df["NodeID"]=all_labels_df["NodeID"].apply(lambda x:"https://sampledG/NID/"+str(x)+"")
/media/hussein/UbuntuData/GithubRepos/ogb_cods/examples/nodeproppred/mag/GenerateSubgraphNodesScores.py:280: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  nt_df=nt_df.append(is_target_df)
sample_idx= 6
data= Data(num_nodes=44938, edge_index=[2, 201060], edge_attr=[201060], node_type=[44938], local_node_idx=[44938], y=[44938, 1], train_mask=[44938])
/media/hussein/UbuntuData/GithubRepos/ogb_cods/examples/nodeproppred/mag/GenerateSubgraphNodesScores.py:266: SettingWithCopyWarning:
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  all_labels_df["NScore"]=all_labels_df["NScore"].apply(lambda x: int(math.ceil(x)))
/media/hussein/UbuntuData/GithubRepos/ogb_cods/examples/nodeproppred/mag/GenerateSubgraphNodesScores.py:267: SettingWithCopyWarning:
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  all_labels_df["NodeID"]=all_labels_df["NodeID"].apply(lambda x:"https://sampledG/NID/"+str(x)+"")
/media/hussein/UbuntuData/GithubRepos/ogb_cods/examples/nodeproppred/mag/GenerateSubgraphNodesScores.py:280: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  nt_df=nt_df.append(is_target_df)
sample_idx= 7
data= Data(num_nodes=44955, edge_index=[2, 200418], edge_attr=[200418], node_type=[44955], local_node_idx=[44955], y=[44955, 1], train_mask=[44955])
/media/hussein/UbuntuData/GithubRepos/ogb_cods/examples/nodeproppred/mag/GenerateSubgraphNodesScores.py:266: SettingWithCopyWarning:
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  all_labels_df["NScore"]=all_labels_df["NScore"].apply(lambda x: int(math.ceil(x)))
/media/hussein/UbuntuData/GithubRepos/ogb_cods/examples/nodeproppred/mag/GenerateSubgraphNodesScores.py:267: SettingWithCopyWarning:
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  all_labels_df["NodeID"]=all_labels_df["NodeID"].apply(lambda x:"https://sampledG/NID/"+str(x)+"")
/media/hussein/UbuntuData/GithubRepos/ogb_cods/examples/nodeproppred/mag/GenerateSubgraphNodesScores.py:280: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  nt_df=nt_df.append(is_target_df)
sample_idx= 8
data= Data(num_nodes=44808, edge_index=[2, 200494], edge_attr=[200494], node_type=[44808], local_node_idx=[44808], y=[44808, 1], train_mask=[44808])
/media/hussein/UbuntuData/GithubRepos/ogb_cods/examples/nodeproppred/mag/GenerateSubgraphNodesScores.py:266: SettingWithCopyWarning:
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  all_labels_df["NScore"]=all_labels_df["NScore"].apply(lambda x: int(math.ceil(x)))
/media/hussein/UbuntuData/GithubRepos/ogb_cods/examples/nodeproppred/mag/GenerateSubgraphNodesScores.py:267: SettingWithCopyWarning:
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  all_labels_df["NodeID"]=all_labels_df["NodeID"].apply(lambda x:"https://sampledG/NID/"+str(x)+"")
/media/hussein/UbuntuData/GithubRepos/ogb_cods/examples/nodeproppred/mag/GenerateSubgraphNodesScores.py:280: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  nt_df=nt_df.append(is_target_df)
sample_idx= 9
data= Data(num_nodes=44837, edge_index=[2, 199834], edge_attr=[199834], node_type=[44837], local_node_idx=[44837], y=[44837, 1], train_mask=[44837])
/media/hussein/UbuntuData/GithubRepos/ogb_cods/examples/nodeproppred/mag/GenerateSubgraphNodesScores.py:266: SettingWithCopyWarning:
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  all_labels_df["NScore"]=all_labels_df["NScore"].apply(lambda x: int(math.ceil(x)))
/media/hussein/UbuntuData/GithubRepos/ogb_cods/examples/nodeproppred/mag/GenerateSubgraphNodesScores.py:267: SettingWithCopyWarning:
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  all_labels_df["NodeID"]=all_labels_df["NodeID"].apply(lambda x:"https://sampledG/NID/"+str(x)+"")
/media/hussein/UbuntuData/GithubRepos/ogb_cods/examples/nodeproppred/mag/GenerateSubgraphNodesScores.py:280: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  nt_df=nt_df.append(is_target_df)
sample_idx= 10
loaderds= YAGO_FM51
data= Data(num_nodes=56591, edge_index=[2, 72574], edge_attr=[72574], node_type=[56591], local_node_idx=[56591], y=[56591, 1], train_mask=[56591])
/media/hussein/UbuntuData/GithubRepos/ogb_cods/examples/nodeproppred/mag/GenerateSubgraphNodesScores.py:266: SettingWithCopyWarning:
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  all_labels_df["NScore"]=all_labels_df["NScore"].apply(lambda x: int(math.ceil(x)))
/media/hussein/UbuntuData/GithubRepos/ogb_cods/examples/nodeproppred/mag/GenerateSubgraphNodesScores.py:267: SettingWithCopyWarning:
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  all_labels_df["NodeID"]=all_labels_df["NodeID"].apply(lambda x:"https://sampledG/NID/"+str(x)+"")
/media/hussein/UbuntuData/GithubRepos/ogb_cods/examples/nodeproppred/mag/GenerateSubgraphNodesScores.py:280: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  nt_df=nt_df.append(is_target_df)
sample_idx= 1
data= Data(num_nodes=56631, edge_index=[2, 73306], edge_attr=[73306], node_type=[56631], local_node_idx=[56631], y=[56631, 1], train_mask=[56631])
/media/hussein/UbuntuData/GithubRepos/ogb_cods/examples/nodeproppred/mag/GenerateSubgraphNodesScores.py:266: SettingWithCopyWarning:
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  all_labels_df["NScore"]=all_labels_df["NScore"].apply(lambda x: int(math.ceil(x)))
/media/hussein/UbuntuData/GithubRepos/ogb_cods/examples/nodeproppred/mag/GenerateSubgraphNodesScores.py:267: SettingWithCopyWarning:
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  all_labels_df["NodeID"]=all_labels_df["NodeID"].apply(lambda x:"https://sampledG/NID/"+str(x)+"")
/media/hussein/UbuntuData/GithubRepos/ogb_cods/examples/nodeproppred/mag/GenerateSubgraphNodesScores.py:280: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  nt_df=nt_df.append(is_target_df)
sample_idx= 2
data= Data(num_nodes=56576, edge_index=[2, 72752], edge_attr=[72752], node_type=[56576], local_node_idx=[56576], y=[56576, 1], train_mask=[56576])
/media/hussein/UbuntuData/GithubRepos/ogb_cods/examples/nodeproppred/mag/GenerateSubgraphNodesScores.py:266: SettingWithCopyWarning:
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  all_labels_df["NScore"]=all_labels_df["NScore"].apply(lambda x: int(math.ceil(x)))
/media/hussein/UbuntuData/GithubRepos/ogb_cods/examples/nodeproppred/mag/GenerateSubgraphNodesScores.py:267: SettingWithCopyWarning:
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  all_labels_df["NodeID"]=all_labels_df["NodeID"].apply(lambda x:"https://sampledG/NID/"+str(x)+"")
/media/hussein/UbuntuData/GithubRepos/ogb_cods/examples/nodeproppred/mag/GenerateSubgraphNodesScores.py:280: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  nt_df=nt_df.append(is_target_df)
sample_idx= 3
data= Data(num_nodes=56538, edge_index=[2, 72854], edge_attr=[72854], node_type=[56538], local_node_idx=[56538], y=[56538, 1], train_mask=[56538])
/media/hussein/UbuntuData/GithubRepos/ogb_cods/examples/nodeproppred/mag/GenerateSubgraphNodesScores.py:266: SettingWithCopyWarning:
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  all_labels_df["NScore"]=all_labels_df["NScore"].apply(lambda x: int(math.ceil(x)))
/media/hussein/UbuntuData/GithubRepos/ogb_cods/examples/nodeproppred/mag/GenerateSubgraphNodesScores.py:267: SettingWithCopyWarning:
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  all_labels_df["NodeID"]=all_labels_df["NodeID"].apply(lambda x:"https://sampledG/NID/"+str(x)+"")
/media/hussein/UbuntuData/GithubRepos/ogb_cods/examples/nodeproppred/mag/GenerateSubgraphNodesScores.py:280: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  nt_df=nt_df.append(is_target_df)
sample_idx= 4
data= Data(num_nodes=56479, edge_index=[2, 72172], edge_attr=[72172], node_type=[56479], local_node_idx=[56479], y=[56479, 1], train_mask=[56479])
/media/hussein/UbuntuData/GithubRepos/ogb_cods/examples/nodeproppred/mag/GenerateSubgraphNodesScores.py:266: SettingWithCopyWarning:
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  all_labels_df["NScore"]=all_labels_df["NScore"].apply(lambda x: int(math.ceil(x)))
/media/hussein/UbuntuData/GithubRepos/ogb_cods/examples/nodeproppred/mag/GenerateSubgraphNodesScores.py:267: SettingWithCopyWarning:
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  all_labels_df["NodeID"]=all_labels_df["NodeID"].apply(lambda x:"https://sampledG/NID/"+str(x)+"")
/media/hussein/UbuntuData/GithubRepos/ogb_cods/examples/nodeproppred/mag/GenerateSubgraphNodesScores.py:280: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  nt_df=nt_df.append(is_target_df)
sample_idx= 5
data= Data(num_nodes=56574, edge_index=[2, 72712], edge_attr=[72712], node_type=[56574], local_node_idx=[56574], y=[56574, 1], train_mask=[56574])
/media/hussein/UbuntuData/GithubRepos/ogb_cods/examples/nodeproppred/mag/GenerateSubgraphNodesScores.py:266: SettingWithCopyWarning:
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  all_labels_df["NScore"]=all_labels_df["NScore"].apply(lambda x: int(math.ceil(x)))
/media/hussein/UbuntuData/GithubRepos/ogb_cods/examples/nodeproppred/mag/GenerateSubgraphNodesScores.py:267: SettingWithCopyWarning:
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  all_labels_df["NodeID"]=all_labels_df["NodeID"].apply(lambda x:"https://sampledG/NID/"+str(x)+"")
/media/hussein/UbuntuData/GithubRepos/ogb_cods/examples/nodeproppred/mag/GenerateSubgraphNodesScores.py:280: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  nt_df=nt_df.append(is_target_df)
sample_idx= 6
data= Data(num_nodes=56504, edge_index=[2, 73112], edge_attr=[73112], node_type=[56504], local_node_idx=[56504], y=[56504, 1], train_mask=[56504])
/media/hussein/UbuntuData/GithubRepos/ogb_cods/examples/nodeproppred/mag/GenerateSubgraphNodesScores.py:266: SettingWithCopyWarning:
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  all_labels_df["NScore"]=all_labels_df["NScore"].apply(lambda x: int(math.ceil(x)))
/media/hussein/UbuntuData/GithubRepos/ogb_cods/examples/nodeproppred/mag/GenerateSubgraphNodesScores.py:267: SettingWithCopyWarning:
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  all_labels_df["NodeID"]=all_labels_df["NodeID"].apply(lambda x:"https://sampledG/NID/"+str(x)+"")
/media/hussein/UbuntuData/GithubRepos/ogb_cods/examples/nodeproppred/mag/GenerateSubgraphNodesScores.py:280: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  nt_df=nt_df.append(is_target_df)
sample_idx= 7
data= Data(num_nodes=56505, edge_index=[2, 72492], edge_attr=[72492], node_type=[56505], local_node_idx=[56505], y=[56505, 1], train_mask=[56505])
/media/hussein/UbuntuData/GithubRepos/ogb_cods/examples/nodeproppred/mag/GenerateSubgraphNodesScores.py:266: SettingWithCopyWarning:
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  all_labels_df["NScore"]=all_labels_df["NScore"].apply(lambda x: int(math.ceil(x)))
/media/hussein/UbuntuData/GithubRepos/ogb_cods/examples/nodeproppred/mag/GenerateSubgraphNodesScores.py:267: SettingWithCopyWarning:
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  all_labels_df["NodeID"]=all_labels_df["NodeID"].apply(lambda x:"https://sampledG/NID/"+str(x)+"")
/media/hussein/UbuntuData/GithubRepos/ogb_cods/examples/nodeproppred/mag/GenerateSubgraphNodesScores.py:280: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  nt_df=nt_df.append(is_target_df)
sample_idx= 8
data= Data(num_nodes=56498, edge_index=[2, 73210], edge_attr=[73210], node_type=[56498], local_node_idx=[56498], y=[56498, 1], train_mask=[56498])
/media/hussein/UbuntuData/GithubRepos/ogb_cods/examples/nodeproppred/mag/GenerateSubgraphNodesScores.py:266: SettingWithCopyWarning:
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  all_labels_df["NScore"]=all_labels_df["NScore"].apply(lambda x: int(math.ceil(x)))
/media/hussein/UbuntuData/GithubRepos/ogb_cods/examples/nodeproppred/mag/GenerateSubgraphNodesScores.py:267: SettingWithCopyWarning:
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  all_labels_df["NodeID"]=all_labels_df["NodeID"].apply(lambda x:"https://sampledG/NID/"+str(x)+"")
/media/hussein/UbuntuData/GithubRepos/ogb_cods/examples/nodeproppred/mag/GenerateSubgraphNodesScores.py:280: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  nt_df=nt_df.append(is_target_df)
sample_idx= 9
data= Data(num_nodes=56479, edge_index=[2, 72434], edge_attr=[72434], node_type=[56479], local_node_idx=[56479], y=[56479, 1], train_mask=[56479])
/media/hussein/UbuntuData/GithubRepos/ogb_cods/examples/nodeproppred/mag/GenerateSubgraphNodesScores.py:266: SettingWithCopyWarning:
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  all_labels_df["NScore"]=all_labels_df["NScore"].apply(lambda x: int(math.ceil(x)))
/media/hussein/UbuntuData/GithubRepos/ogb_cods/examples/nodeproppred/mag/GenerateSubgraphNodesScores.py:267: SettingWithCopyWarning:
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  all_labels_df["NodeID"]=all_labels_df["NodeID"].apply(lambda x:"https://sampledG/NID/"+str(x)+"")
/media/hussein/UbuntuData/GithubRepos/ogb_cods/examples/nodeproppred/mag/GenerateSubgraphNodesScores.py:280: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  nt_df=nt_df.append(is_target_df)
sample_idx= 10
loaderds= mag
data= Data(num_nodes=51172, edge_index=[2, 600074], edge_attr=[600074], node_type=[51172], local_node_idx=[51172], y=[51172, 1], train_mask=[51172])
/media/hussein/UbuntuData/GithubRepos/ogb_cods/examples/nodeproppred/mag/GenerateSubgraphNodesScores.py:266: SettingWithCopyWarning:
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  all_labels_df["NScore"]=all_labels_df["NScore"].apply(lambda x: int(math.ceil(x)))
/media/hussein/UbuntuData/GithubRepos/ogb_cods/examples/nodeproppred/mag/GenerateSubgraphNodesScores.py:267: SettingWithCopyWarning:
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  all_labels_df["NodeID"]=all_labels_df["NodeID"].apply(lambda x:"https://sampledG/NID/"+str(x)+"")
/media/hussein/UbuntuData/GithubRepos/ogb_cods/examples/nodeproppred/mag/GenerateSubgraphNodesScores.py:280: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  nt_df=nt_df.append(is_target_df)
sample_idx= 1
data= Data(num_nodes=51271, edge_index=[2, 603328], edge_attr=[603328], node_type=[51271], local_node_idx=[51271], y=[51271, 1], train_mask=[51271])
/media/hussein/UbuntuData/GithubRepos/ogb_cods/examples/nodeproppred/mag/GenerateSubgraphNodesScores.py:266: SettingWithCopyWarning:
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  all_labels_df["NScore"]=all_labels_df["NScore"].apply(lambda x: int(math.ceil(x)))
/media/hussein/UbuntuData/GithubRepos/ogb_cods/examples/nodeproppred/mag/GenerateSubgraphNodesScores.py:267: SettingWithCopyWarning:
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  all_labels_df["NodeID"]=all_labels_df["NodeID"].apply(lambda x:"https://sampledG/NID/"+str(x)+"")
/media/hussein/UbuntuData/GithubRepos/ogb_cods/examples/nodeproppred/mag/GenerateSubgraphNodesScores.py:280: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  nt_df=nt_df.append(is_target_df)
sample_idx= 2
data= Data(num_nodes=51140, edge_index=[2, 602202], edge_attr=[602202], node_type=[51140], local_node_idx=[51140], y=[51140, 1], train_mask=[51140])
/media/hussein/UbuntuData/GithubRepos/ogb_cods/examples/nodeproppred/mag/GenerateSubgraphNodesScores.py:266: SettingWithCopyWarning:
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  all_labels_df["NScore"]=all_labels_df["NScore"].apply(lambda x: int(math.ceil(x)))
/media/hussein/UbuntuData/GithubRepos/ogb_cods/examples/nodeproppred/mag/GenerateSubgraphNodesScores.py:267: SettingWithCopyWarning:
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  all_labels_df["NodeID"]=all_labels_df["NodeID"].apply(lambda x:"https://sampledG/NID/"+str(x)+"")
/media/hussein/UbuntuData/GithubRepos/ogb_cods/examples/nodeproppred/mag/GenerateSubgraphNodesScores.py:280: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  nt_df=nt_df.append(is_target_df)
sample_idx= 3
data= Data(num_nodes=51319, edge_index=[2, 610326], edge_attr=[610326], node_type=[51319], local_node_idx=[51319], y=[51319, 1], train_mask=[51319])
/media/hussein/UbuntuData/GithubRepos/ogb_cods/examples/nodeproppred/mag/GenerateSubgraphNodesScores.py:266: SettingWithCopyWarning:
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  all_labels_df["NScore"]=all_labels_df["NScore"].apply(lambda x: int(math.ceil(x)))
/media/hussein/UbuntuData/GithubRepos/ogb_cods/examples/nodeproppred/mag/GenerateSubgraphNodesScores.py:267: SettingWithCopyWarning:
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  all_labels_df["NodeID"]=all_labels_df["NodeID"].apply(lambda x:"https://sampledG/NID/"+str(x)+"")
/media/hussein/UbuntuData/GithubRepos/ogb_cods/examples/nodeproppred/mag/GenerateSubgraphNodesScores.py:280: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  nt_df=nt_df.append(is_target_df)
sample_idx= 4
data= Data(num_nodes=51163, edge_index=[2, 599044], edge_attr=[599044], node_type=[51163], local_node_idx=[51163], y=[51163, 1], train_mask=[51163])
/media/hussein/UbuntuData/GithubRepos/ogb_cods/examples/nodeproppred/mag/GenerateSubgraphNodesScores.py:266: SettingWithCopyWarning:
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  all_labels_df["NScore"]=all_labels_df["NScore"].apply(lambda x: int(math.ceil(x)))
/media/hussein/UbuntuData/GithubRepos/ogb_cods/examples/nodeproppred/mag/GenerateSubgraphNodesScores.py:267: SettingWithCopyWarning:
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  all_labels_df["NodeID"]=all_labels_df["NodeID"].apply(lambda x:"https://sampledG/NID/"+str(x)+"")
/media/hussein/UbuntuData/GithubRepos/ogb_cods/examples/nodeproppred/mag/GenerateSubgraphNodesScores.py:280: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  nt_df=nt_df.append(is_target_df)
sample_idx= 5
data= Data(num_nodes=51145, edge_index=[2, 601944], edge_attr=[601944], node_type=[51145], local_node_idx=[51145], y=[51145, 1], train_mask=[51145])
/media/hussein/UbuntuData/GithubRepos/ogb_cods/examples/nodeproppred/mag/GenerateSubgraphNodesScores.py:266: SettingWithCopyWarning:
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  all_labels_df["NScore"]=all_labels_df["NScore"].apply(lambda x: int(math.ceil(x)))
/media/hussein/UbuntuData/GithubRepos/ogb_cods/examples/nodeproppred/mag/GenerateSubgraphNodesScores.py:267: SettingWithCopyWarning:
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  all_labels_df["NodeID"]=all_labels_df["NodeID"].apply(lambda x:"https://sampledG/NID/"+str(x)+"")
/media/hussein/UbuntuData/GithubRepos/ogb_cods/examples/nodeproppred/mag/GenerateSubgraphNodesScores.py:280: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  nt_df=nt_df.append(is_target_df)
sample_idx= 6
data= Data(num_nodes=51150, edge_index=[2, 602692], edge_attr=[602692], node_type=[51150], local_node_idx=[51150], y=[51150, 1], train_mask=[51150])
/media/hussein/UbuntuData/GithubRepos/ogb_cods/examples/nodeproppred/mag/GenerateSubgraphNodesScores.py:266: SettingWithCopyWarning:
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  all_labels_df["NScore"]=all_labels_df["NScore"].apply(lambda x: int(math.ceil(x)))
/media/hussein/UbuntuData/GithubRepos/ogb_cods/examples/nodeproppred/mag/GenerateSubgraphNodesScores.py:267: SettingWithCopyWarning:
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  all_labels_df["NodeID"]=all_labels_df["NodeID"].apply(lambda x:"https://sampledG/NID/"+str(x)+"")
/media/hussein/UbuntuData/GithubRepos/ogb_cods/examples/nodeproppred/mag/GenerateSubgraphNodesScores.py:280: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  nt_df=nt_df.append(is_target_df)
sample_idx= 7
data= Data(num_nodes=51228, edge_index=[2, 609084], edge_attr=[609084], node_type=[51228], local_node_idx=[51228], y=[51228, 1], train_mask=[51228])
/media/hussein/UbuntuData/GithubRepos/ogb_cods/examples/nodeproppred/mag/GenerateSubgraphNodesScores.py:266: SettingWithCopyWarning:
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  all_labels_df["NScore"]=all_labels_df["NScore"].apply(lambda x: int(math.ceil(x)))
/media/hussein/UbuntuData/GithubRepos/ogb_cods/examples/nodeproppred/mag/GenerateSubgraphNodesScores.py:267: SettingWithCopyWarning:
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  all_labels_df["NodeID"]=all_labels_df["NodeID"].apply(lambda x:"https://sampledG/NID/"+str(x)+"")
/media/hussein/UbuntuData/GithubRepos/ogb_cods/examples/nodeproppred/mag/GenerateSubgraphNodesScores.py:280: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  nt_df=nt_df.append(is_target_df)
sample_idx= 8
data= Data(num_nodes=51217, edge_index=[2, 606546], edge_attr=[606546], node_type=[51217], local_node_idx=[51217], y=[51217, 1], train_mask=[51217])
/media/hussein/UbuntuData/GithubRepos/ogb_cods/examples/nodeproppred/mag/GenerateSubgraphNodesScores.py:266: SettingWithCopyWarning:
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  all_labels_df["NScore"]=all_labels_df["NScore"].apply(lambda x: int(math.ceil(x)))
/media/hussein/UbuntuData/GithubRepos/ogb_cods/examples/nodeproppred/mag/GenerateSubgraphNodesScores.py:267: SettingWithCopyWarning:
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  all_labels_df["NodeID"]=all_labels_df["NodeID"].apply(lambda x:"https://sampledG/NID/"+str(x)+"")
/media/hussein/UbuntuData/GithubRepos/ogb_cods/examples/nodeproppred/mag/GenerateSubgraphNodesScores.py:280: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  nt_df=nt_df.append(is_target_df)
sample_idx= 9
data= Data(num_nodes=51355, edge_index=[2, 606290], edge_attr=[606290], node_type=[51355], local_node_idx=[51355], y=[51355, 1], train_mask=[51355])
/media/hussein/UbuntuData/GithubRepos/ogb_cods/examples/nodeproppred/mag/GenerateSubgraphNodesScores.py:266: SettingWithCopyWarning:
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  all_labels_df["NScore"]=all_labels_df["NScore"].apply(lambda x: int(math.ceil(x)))
/media/hussein/UbuntuData/GithubRepos/ogb_cods/examples/nodeproppred/mag/GenerateSubgraphNodesScores.py:267: SettingWithCopyWarning:
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  all_labels_df["NodeID"]=all_labels_df["NodeID"].apply(lambda x:"https://sampledG/NID/"+str(x)+"")
/media/hussein/UbuntuData/GithubRepos/ogb_cods/examples/nodeproppred/mag/GenerateSubgraphNodesScores.py:280: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  nt_df=nt_df.append(is_target_df)
sample_idx= 10
Dataset 00, Epoch: 00, MSE: 63.0638
Dataset 01, Epoch: 00, MSE: 59.2710
Dataset 02, Epoch: 00, MSE: 57.9050
Dataset 03, Epoch: 00, MSE: 60.4939
Dataset 04, Epoch: 00, MSE: 54.9247
Dataset 05, Epoch: 00, MSE: 45.9377
Dataset 06, Epoch: 00, MSE: 33.2293
Dataset 07, Epoch: 00, MSE: 27.9288
Dataset 08, Epoch: 00, MSE: 20.3415
Dataset 09, Epoch: 00, MSE: 13.6068
Dataset 10, Epoch: 00, MSE: 0.2339
Dataset 11, Epoch: 00, MSE: 0.2127
Dataset 12, Epoch: 00, MSE: 0.1356
Dataset 13, Epoch: 00, MSE: 0.1438
Dataset 14, Epoch: 00, MSE: 0.1070
Dataset 15, Epoch: 00, MSE: 0.1201
Dataset 16, Epoch: 00, MSE: 0.2779
Dataset 17, Epoch: 00, MSE: 0.0911
Dataset 18, Epoch: 00, MSE: 0.5519
Dataset 19, Epoch: 00, MSE: 0.1107
Dataset 20, Epoch: 00, MSE: 5.7164
Dataset 21, Epoch: 00, MSE: 2.4507
Dataset 22, Epoch: 00, MSE: 0.7727
Dataset 23, Epoch: 00, MSE: 0.2155
Dataset 24, Epoch: 00, MSE: 0.1252
Dataset 25, Epoch: 00, MSE: 0.1615
Dataset 26, Epoch: 00, MSE: 0.2339
Dataset 27, Epoch: 00, MSE: 0.2910
Dataset 28, Epoch: 00, MSE: 0.3144
Dataset 29, Epoch: 00, MSE: 0.2828
Dataset 00, Epoch: 01, MSE: 88.8826
Dataset 01, Epoch: 01, MSE: 204.2217
Dataset 02, Epoch: 01, MSE: 111.4188
Dataset 03, Epoch: 01, MSE: 19.0273
Dataset 04, Epoch: 01, MSE: 19.8361
Dataset 05, Epoch: 01, MSE: 12.9337
Dataset 06, Epoch: 01, MSE: 13.8504
Dataset 07, Epoch: 01, MSE: 11.2416
Dataset 08, Epoch: 01, MSE: 16.5514
Dataset 09, Epoch: 01, MSE: 19.3395
Dataset 10, Epoch: 01, MSE: 0.5845
Dataset 11, Epoch: 01, MSE: 0.6194
Dataset 12, Epoch: 01, MSE: 0.6471
Dataset 13, Epoch: 01, MSE: 0.6700
Dataset 14, Epoch: 01, MSE: 0.6888
Dataset 15, Epoch: 01, MSE: 0.7092
Dataset 16, Epoch: 01, MSE: 0.7223
Dataset 17, Epoch: 01, MSE: 0.7318
Dataset 18, Epoch: 01, MSE: 0.7412
Dataset 19, Epoch: 01, MSE: 0.7488
Dataset 20, Epoch: 01, MSE: 0.4129
Dataset 21, Epoch: 01, MSE: 0.4082
Dataset 22, Epoch: 01, MSE: 0.4113
Dataset 23, Epoch: 01, MSE: 0.4081
Dataset 24, Epoch: 01, MSE: 0.4100
Dataset 25, Epoch: 01, MSE: 0.3939
Dataset 26, Epoch: 01, MSE: 0.3915
Dataset 27, Epoch: 01, MSE: 0.3873
Dataset 28, Epoch: 01, MSE: 0.3939
Dataset 29, Epoch: 01, MSE: 0.3829
Dataset 00, Epoch: 02, MSE: 66.8974
Dataset 01, Epoch: 02, MSE: 66.6097
Dataset 02, Epoch: 02, MSE: 69.4958
Dataset 03, Epoch: 02, MSE: 69.4868
Dataset 04, Epoch: 02, MSE: 68.8362
Dataset 05, Epoch: 02, MSE: 69.1849
Dataset 06, Epoch: 02, MSE: 68.5507
Dataset 07, Epoch: 02, MSE: 59.9794
Dataset 08, Epoch: 02, MSE: 47.2222
Dataset 09, Epoch: 02, MSE: 40.9541
Dataset 10, Epoch: 02, MSE: 0.6932
Dataset 11, Epoch: 02, MSE: 0.6806
Dataset 12, Epoch: 02, MSE: 0.6652
Dataset 13, Epoch: 02, MSE: 0.6517
Dataset 14, Epoch: 02, MSE: 0.6393
Dataset 15, Epoch: 02, MSE: 0.6299
Dataset 16, Epoch: 02, MSE: 0.6205
Dataset 17, Epoch: 02, MSE: 0.6077
Dataset 18, Epoch: 02, MSE: 0.5993
Dataset 19, Epoch: 02, MSE: 0.5922
Dataset 20, Epoch: 02, MSE: 0.3015
Dataset 21, Epoch: 02, MSE: 0.2982
Dataset 22, Epoch: 02, MSE: 0.2967
Dataset 23, Epoch: 02, MSE: 0.2949
Dataset 24, Epoch: 02, MSE: 0.2858
Dataset 25, Epoch: 02, MSE: 0.2683
Dataset 26, Epoch: 02, MSE: 0.2605
Dataset 27, Epoch: 02, MSE: 0.2565
Dataset 28, Epoch: 02, MSE: 0.2621
Dataset 29, Epoch: 02, MSE: 0.2543
Dataset 00, Epoch: 03, MSE: 63.1401
Dataset 01, Epoch: 03, MSE: 61.4788
Dataset 02, Epoch: 03, MSE: 65.1711
Dataset 03, Epoch: 03, MSE: 63.3646
Dataset 04, Epoch: 03, MSE: 60.0663
Dataset 05, Epoch: 03, MSE: 57.9793
Dataset 06, Epoch: 03, MSE: 58.5950
Dataset 07, Epoch: 03, MSE: 27.6579
Dataset 08, Epoch: 03, MSE: 14.1558
Dataset 09, Epoch: 03, MSE: 8.5202
Dataset 10, Epoch: 03, MSE: 0.3764
Dataset 11, Epoch: 03, MSE: 0.3612
Dataset 12, Epoch: 03, MSE: 0.3436
Dataset 13, Epoch: 03, MSE: 0.3289
Dataset 14, Epoch: 03, MSE: 0.3151
Dataset 15, Epoch: 03, MSE: 0.3043
Dataset 16, Epoch: 03, MSE: 0.2944
Dataset 17, Epoch: 03, MSE: 0.2822
Dataset 18, Epoch: 03, MSE: 0.2726
Dataset 19, Epoch: 03, MSE: 0.2648
Dataset 20, Epoch: 03, MSE: 0.1842
Dataset 21, Epoch: 03, MSE: 0.1849
Dataset 22, Epoch: 03, MSE: 0.1789
Dataset 23, Epoch: 03, MSE: 0.1730
Dataset 24, Epoch: 03, MSE: 0.1653
Dataset 25, Epoch: 03, MSE: 0.1602
Dataset 26, Epoch: 03, MSE: 0.1555
Dataset 27, Epoch: 03, MSE: 0.1565
Dataset 28, Epoch: 03, MSE: 0.1523
Dataset 29, Epoch: 03, MSE: 0.1472
Dataset 00, Epoch: 04, MSE: 47.4792
Dataset 01, Epoch: 04, MSE: 37.1364
Dataset 02, Epoch: 04, MSE: 44.5611
Dataset 03, Epoch: 04, MSE: 36.1982
Dataset 04, Epoch: 04, MSE: 23.4086
Dataset 05, Epoch: 04, MSE: 17.9030
Dataset 06, Epoch: 04, MSE: 18.3206
Dataset 07, Epoch: 04, MSE: 16.7910
Dataset 08, Epoch: 04, MSE: 21.8477
Dataset 09, Epoch: 04, MSE: 16.0639
Dataset 10, Epoch: 04, MSE: 0.1264
Dataset 11, Epoch: 04, MSE: 0.1348
Dataset 12, Epoch: 04, MSE: 0.1280
Dataset 13, Epoch: 04, MSE: 0.1288
Dataset 14, Epoch: 04, MSE: 0.1249
Dataset 15, Epoch: 04, MSE: 0.1271
Dataset 16, Epoch: 04, MSE: 0.1270
Dataset 17, Epoch: 04, MSE: 0.1248
Dataset 18, Epoch: 04, MSE: 0.1246
Dataset 19, Epoch: 04, MSE: 0.1231
Dataset 20, Epoch: 04, MSE: 0.1211
Dataset 21, Epoch: 04, MSE: 0.1232
Dataset 22, Epoch: 04, MSE: 0.1199
Dataset 23, Epoch: 04, MSE: 0.1173
Dataset 24, Epoch: 04, MSE: 0.1143
Dataset 25, Epoch: 04, MSE: 0.1135
Dataset 26, Epoch: 04, MSE: 0.1146
Dataset 27, Epoch: 04, MSE: 0.1166
Dataset 28, Epoch: 04, MSE: 0.1152
Dataset 29, Epoch: 04, MSE: 0.1162
25437380